plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"

    // ucomment the following lines when use firebase
    // id 'com.google.gms.google-services'
    // id 'com.google.firebase.crashlytics'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

// Load environment variables from .env file
def loadEnv() {
    Properties properties = new Properties()
    // Ensure the .env file is loaded from the project root directory
    def envFile = new File(rootProject.projectDir.parentFile, '.env')
    if (envFile.exists()) {
        envFile.withInputStream { stream ->
            properties.load(stream)
        }
    } else {
        throw new FileNotFoundException(".env file not found in project root directory")
    }
    return properties
}

// Apply the environment variables
project.ext.env = loadEnv()

android {
    namespace "com.example.startup_repo"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId project.env.BUNDLE_ID_ANDROID
        minSdkVersion project.env.MIN_SDK_VERSION
        targetSdkVersion project.env.TARGET_SDK_VERSION
        versionCode project.env.ANDROID_VERSION_CODE.toInteger()
        versionName project.env.ANDROID_VERSION_NAME.toString()
        multiDexEnabled true

        // define variables here to use in AndroidManifest.xml 
        resValue "string", "app_name", project.env.APP_NAME
    }

    signingConfigs {

        // debug {
        //     storeFile file(project.env.KEYSTORE_PATH.toString())
        //     storePassword project.env.KEYSTORE_PASSWORD
        //     keyAlias project.env.KEYSTORE_ALIAS
        //     keyPassword project.env.KEY_PASSWORD
        // }

        // release {
        //     storeFile file(project.env.KEYSTORE_PATH.toString())
        //     storePassword project.env.KEYSTORE_PASSWORD
        //     keyAlias project.env.KEYSTORE_ALIAS
        //     keyPassword project.env.KEY_PASSWORD
        // }
    }

    buildTypes {
        
        // debug {
        //     signingConfig signingConfigs.debug
        // }

        // release {
        //     signingConfig signingConfigs.release
        //     minifyEnabled true
        //     shrinkResources true
        // }
    }
}


flutter {
    source = "../.."
}
